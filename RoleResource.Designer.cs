//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Figaro.Web.ApplicationServices {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class RoleResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RoleResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Figaro.Web.ApplicationServices.RoleResource", typeof(RoleResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to applicationName.
        /// </summary>
        internal static string ConfigAppName {
            get {
                return ResourceManager.GetString("ConfigAppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to container.
        /// </summary>
        internal static string ConfigContainer {
            get {
                return ResourceManager.GetString("ConfigContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to description.
        /// </summary>
        internal static string ConfigDescription {
            get {
                return ResourceManager.GetString("ConfigDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateCreated.
        /// </summary>
        internal static string MetadataDateCreated {
            get {
                return ResourceManager.GetString("MetadataDateCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.sleepycat.com/2002/dbxml.
        /// </summary>
        internal static string MetadataFileNameNS {
            get {
                return ResourceManager.GetString("MetadataFileNameNS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FigaroRole.
        /// </summary>
        internal static string NodeRoot {
            get {
                return ResourceManager.GetString("NodeRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users.
        /// </summary>
        internal static string NodeUsersRoot {
            get {
                return ResourceManager.GetString("NodeUsersRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /FigaroRole/Users/User.
        /// </summary>
        internal static string PathUser {
            get {
                return ResourceManager.GetString("PathUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to for $x in collection(&apos;role&apos;) {0} {1}.
        /// </summary>
        internal static string QueryBase {
            get {
                return ResourceManager.GetString("QueryBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete nodes doc(\&quot;dbxml:/role/{0}\&quot;)/FigaroRole/Users[User = $user].
        /// </summary>
        internal static string QueryDeleteUserFromRole {
            get {
                return ResourceManager.GetString("QueryDeleteUserFromRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to insert nodes {0} as last into doc(\&quot;dbxml:/role/{1}\&quot;)/FigaroRole/Users.
        /// </summary>
        internal static string QueryInsertUser {
            get {
                return ResourceManager.GetString("QueryInsertUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to let $app := for $x in doc(&apos;dbxml:/role/{0}&apos;)/FigaroRole/Apps/App where xs:string($x) = $name return $x
        ///return (if (not(exists($app))) then 
        ///	insert nodes &lt;App&gt;$name&lt;/App&gt; as last into doc(&apos;dbxml:/role/{0}&apos;)/FigaroRole/Apps
        ///	else replace value of node $app with $name
        ///	).
        /// </summary>
        internal static string QueryRoleAppNameUpsert {
            get {
                return ResourceManager.GetString("QueryRoleAppNameUpsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to for $x in collection(&apos;role&apos;) where $x[dbxml:metadata(&apos;{0}:{1}&apos;) = ${2}] return $x.
        /// </summary>
        internal static string QueryRoleExists {
            get {
                return ResourceManager.GetString("QueryRoleExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to for $x in collection(&apos;role&apos;) where $x/FigaroRole/Users[User = $user] return $x.
        /// </summary>
        internal static string QueryRolesForUser {
            get {
                return ResourceManager.GetString("QueryRolesForUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to for $x in doc(\&quot;dbxml:/role/{0}\&quot;)/FigaroRole/Users/User where matches(xs:string($x),\&quot;{1}\&quot;) return xs:string($x).
        /// </summary>
        internal static string QueryUserMatchInRole {
            get {
                return ResourceManager.GetString("QueryUserMatchInRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to doc(\&quot;dbxml:/role/{0}\&quot;)/FigaroRole/Users/User.
        /// </summary>
        internal static string QueryUsers {
            get {
                return ResourceManager.GetString("QueryUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to for $x in doc(\&quot;dbxml:/role/{0}\&quot;)/FigaroRole/Users/User return xs:string($x/FigaroRole/Users/User).
        /// </summary>
        internal static string QueryUsersInRole {
            get {
                return ResourceManager.GetString("QueryUsersInRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; ?&gt;
        ///&lt;FigaroRole xmlns =&quot;http://schemas.bdbxml.net/web/role/2009/05/&quot;&gt;
        ///&lt;Apps&gt;&lt;/Apps&gt;
        ///	&lt;Users&gt;
        ///	&lt;/Users&gt;
        ///&lt;/FigaroRole&gt;.
        /// </summary>
        internal static string RoleRecord {
            get {
                return ResourceManager.GetString("RoleRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FigaroRoleProvider.
        /// </summary>
        internal static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $x[dbxml:metadata(&apos;{0}:{1}&apos;) = ${2}].
        /// </summary>
        internal static string WhereRoleNameMatch {
            get {
                return ResourceManager.GetString("WhereRoleNameMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://schemas.bdbxml.net/web/role/2009/05/.
        /// </summary>
        internal static string xmlns {
            get {
                return ResourceManager.GetString("xmlns", resourceCulture);
            }
        }
    }
}
